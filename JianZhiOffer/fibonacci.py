# -*- coding: utf-8 -*-
"""
@author: MT
斐波那契数列

类似题目: 一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法。
首先我们考虑最简单的情况。如果只有1级台阶，那显然只有一种跳法。如果有2级台阶，
那就有两种跳的方法了：一种是分两次跳，每次跳1级；另外一种就是一次跳2级。
接着我们再来讨论一般情况。我们把n级台阶时的跳法看成是n的函数，记为f（n）。
当n>2时，第一次跳的时候就有两种不同的选择：一是第一次只跳1级，此时跳法数目等于后面剩下的n－1级台阶的跳法数目，即为f（n－1）；
另外一种选择是第一次跳2级，此时跳法数目等于后面剩下的n－2级台阶的跳法数目，即为f（n－2）。
因此n级台阶的不同跳法的总数f（n）=f（n－1）＋f（n－2）。分析到这里，我们不难看出这实际上就是斐波那契数列了。
"""


def fibonacci(n):
    if n == 0:
        yield 0

    a = 0
    b = 1
    while n:
        yield b
        a, b = b, a + b
        n -= 1


if __name__ == '__main__':
    for i in fibonacci(10):
        print i
